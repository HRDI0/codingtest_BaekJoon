def solution(n):
    n = int(n)
    answer = ''
    while n != 0:
        if n % 3 == 0:
            answer += '4'
            n = (n//3) -1   #3진법과 다른점은 수가 넘어가는 0이 없다는 점이다. 그렇기 때문에 이런 연산이 필요하다.
        elif n % 3 == 1: 
            answer += '1'
            n //=3
        elif n % 3 == 2:
            answer += '2'
            n //=3
    return answer[::-1]
input_string = input()
print(solution(input_string))
# n이 3으로 나누어 떨어지면 1의 자리가 4이다 3 = 4, 6 = 14, 9 = 24 ....
# n을 3으로 나눴을 때 나머지가 홀수면 1의 자리가 1이다. 1 = 1, 4 = 11, 7 = 21 ...
# n을 3으로 나눴을 대 나머지가 짝수면 1의 자리가 2이다. 2 = 2, 5 = 12, 8 = 22 ....

# 1. 3진법으로 변환하는 코드 짜기

# 2. 사용 가능한 숫자가 1, 2, 4여서 0이 없으므로 0, 1, 2가 1, 2, 4로 하나씩 밀리니까 
# 0으로 나누어 떨어질 때 4로 바꾸고 n에서 1 빼기(올림이 하나 밀리니 앞 자리수도 하나 적어짐)

# 3. 뒤집고 출력